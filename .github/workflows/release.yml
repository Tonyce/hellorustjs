name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    name: Publish for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: macos
            os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: target/release/libhellorust.dylib
            asset_name: libhellorust.dylib
            cross: false
          - name: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: target/release/libhellorust.so
            asset_name: libhellorust.so
            cross: false
          - name: linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: target/aarch64-unknown-linux-gnu/release/libhellorust.so
            asset_name: libhellorust.so(aarch64)
            cross: true

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: ${{ matrix.cross }}

      - uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --target ${{ matrix.target }} --release

      - name: tree
        run: |
          echo hellotarget
          tree target
      # - name: Upload binaries to release
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: ${{ matrix.asset_name }}
      #     path: ${{ matrix.artifact_name }}

      # - name: Upload binaries to release
      #   uses: actions/upload-artifact@v2
      #   with:
      #     path: target/aarch64-unknown-linux-gnu/release/libhellorust.so
      #     name: libhellorust.so(aarch64)


  # publish:
  #   name: Publish for ${{ matrix.name }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       include:
  #         # - name: linux
  #         #   os: ubuntu-latest
  #         #   target: x86_64-unknown-linux-gnu
  #         #   artifact_name: target/release/libhellorust.so
  #         #   asset_name: libhellorust.so(x86_64)
  #         - name: linux-arm
  #           os: ubuntu-latest
  #           # target: aarch64-unknown-linux-musl
  #           target: armv7-unknown-linux-gnueabihf
  #           artifact_name: target/release/libhellorust.so
  #           asset_name: libhellorust.so(aarch64)
  #           cross: true

  #   steps:
  #   - uses: actions/checkout@v1
  #   - uses: actions-rs/toolchain@v1
  #     with:
  #       target: ${{ matrix.target }}
  #       profile: minimal
  #       toolchain: stable

  #   - name: Build
  #     # run: cargo build --release --locked --target ${{ matrix.target }}
  #     run: |
  #       apt install gcc-arm-linux-gnueabihf
  #       cargo rustc --target ${{ matrix.target }}

  #   - name: Upload binaries to release
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: ${{ matrix.asset_name }}
  #       path: ${{ matrix.artifact_name }}